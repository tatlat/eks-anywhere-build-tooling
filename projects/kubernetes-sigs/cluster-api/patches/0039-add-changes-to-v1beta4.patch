From 0fa8588159e3394cc5e3b0e8a1e702ec472bac63 Mon Sep 17 00:00:00 2001
From: Tanvir Tatla <tatlat@amazon.com>
Date: Tue, 17 Sep 2024 16:45:06 -0700
Subject: [PATCH 39/39] add changes to v1beta4

---
 .../zz_generated.conversion.go                |  60 +-
 .../kubeadm/types/upstreamv1beta2/types.go    | 154 +++++
 .../zz_generated.conversion.go                | 396 ++++++++++-
 .../kubeadm/types/upstreamv1beta3/types.go    | 154 +++++
 .../zz_generated.conversion.go                | 395 ++++++++++-
 .../types/upstreamv1beta4/conversion_test.go  |   1 -
 .../kubeadm/types/upstreamv1beta4/types.go    | 246 ++++++-
 .../zz_generated.conversion.go                | 632 +++++++++++++++++-
 8 files changed, 1988 insertions(+), 50 deletions(-)

diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
index 74342561d..bcdb77cea 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
@@ -718,7 +718,15 @@ func Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta1_Bottleroc
 }
 
 func autoConvert_upstreamv1beta1_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in *BottlerocketSettings, out *v1beta1.BottlerocketSettings, s conversion.Scope) error {
-	out.Kubernetes = (*v1beta1.BottlerocketKubernetesSettings)(unsafe.Pointer(in.Kubernetes))
+	if in.Kubernetes != nil {
+		in, out := &in.Kubernetes, &out.Kubernetes
+		*out = new(v1beta1.BottlerocketKubernetesSettings)
+		if err := Convert_upstreamv1beta1_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Kubernetes = nil
+	}
 	out.Kernel = (*v1beta1.BottlerocketKernelSettings)(unsafe.Pointer(in.Kernel))
 	out.Boot = (*v1beta1.BottlerocketBootSettings)(unsafe.Pointer(in.Boot))
 	return nil
@@ -730,7 +738,15 @@ func Convert_upstreamv1beta1_BottlerocketSettings_To_v1beta1_BottlerocketSetting
 }
 
 func autoConvert_v1beta1_BottlerocketSettings_To_upstreamv1beta1_BottlerocketSettings(in *v1beta1.BottlerocketSettings, out *BottlerocketSettings, s conversion.Scope) error {
-	out.Kubernetes = (*BottlerocketKubernetesSettings)(unsafe.Pointer(in.Kubernetes))
+	if in.Kubernetes != nil {
+		in, out := &in.Kubernetes, &out.Kubernetes
+		*out = new(BottlerocketKubernetesSettings)
+		if err := Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta1_BottlerocketKubernetesSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Kubernetes = nil
+	}
 	out.Kernel = (*BottlerocketKernelSettings)(unsafe.Pointer(in.Kernel))
 	out.Boot = (*BottlerocketBootSettings)(unsafe.Pointer(in.Boot))
 	return nil
@@ -809,7 +825,15 @@ func autoConvert_upstreamv1beta1_ClusterConfiguration_To_v1beta1_ClusterConfigur
 	out.ClusterName = in.ClusterName
 	out.BottlerocketHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
-	out.Bottlerocket = (*v1beta1.BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(v1beta1.BottlerocketSettings)
+		if err := Convert_upstreamv1beta1_BottlerocketSettings_To_v1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
 	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
@@ -859,7 +883,15 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta1_ClusterConfigur
 	out.ClusterName = in.ClusterName
 	out.BottlerocketHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
-	out.Bottlerocket = (*BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(BottlerocketSettings)
+		if err := Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
 	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
@@ -1157,7 +1189,15 @@ func autoConvert_upstreamv1beta1_JoinConfiguration_To_v1beta1_JoinConfiguration(
 	out.ControlPlane = (*v1beta1.JoinControlPlane)(unsafe.Pointer(in.ControlPlane))
 	out.BottlerocketCustomHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
-	out.Bottlerocket = (*v1beta1.BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(v1beta1.BottlerocketSettings)
+		if err := Convert_upstreamv1beta1_BottlerocketSettings_To_v1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
 	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
@@ -1198,7 +1238,15 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta1_JoinConfiguration(
 	// WARNING: in.Patches requires manual conversion: does not exist in peer-type
 	out.BottlerocketCustomHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
-	out.Bottlerocket = (*BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(BottlerocketSettings)
+		if err := Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
 	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
diff --git a/bootstrap/kubeadm/types/upstreamv1beta2/types.go b/bootstrap/kubeadm/types/upstreamv1beta2/types.go
index b45040a22..04e4a94f9 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta2/types.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta2/types.go
@@ -74,6 +74,10 @@ type ClusterConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
@@ -161,6 +165,63 @@ type ClusterConfiguration struct {
 	// The cluster name
 	// +optional
 	ClusterName string `json:"clusterName,omitempty"`
+
+	// BottlerocketHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
+	// Bottlerocket holds configuration for certain bottlerocket settings.
+	// This is only for bottlerocket.
+	// +optional
+	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
+}
+
+// BottlerocketSettings define bottlerocket settings that can be configured on bottlerocket nodes.
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketSettings struct {
+	// Kubernetes holds the kubernetes settings for bottlerocket nodes.
+	Kubernetes *BottlerocketKubernetesSettings `json:"kubernetes,omitempty"`
+
+	// KernelSettings contains additional kernel settings for Bottlerocket.
+	// +optional
+	Kernel *BottlerocketKernelSettings `json:"kernel,omitempty"`
+
+	// Boot holds the boot-related settings for bottlerocket nodes
+	Boot *BottlerocketBootSettings `json:"boot,omitempty"`
+}
+
+// BottlerocketKubernetesSettings holds the settings for kubernetes on bottlerocket nodes.
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketKubernetesSettings struct {
+	// MaxPods defines the maximum number of pods that can run on a node.
+	MaxPods int `json:"maxPods,omitempty"`
+
+	// AllowedUnsafeSysctls defines the list of unsafe sysctls that can be set on a node.
+	AllowedUnsafeSysctls []string `json:"allowedUnsafeSysctls,omitempty"`
+
+	// ClusterDNSIPs defines IP addresses of the DNS servers.
+	ClusterDNSIPs []string `json:"clusterDNSIPs,omitempty"`
+}
+
+// BottlerocketKernelSettings holds the kernel settings for bottlerocket nodes
+type BottlerocketKernelSettings struct {
+	// SysctlSettings defines the kernel sysctl settings to set for bottlerocket nodes.
+	SysctlSettings map[string]string `json:"sysctlSettings,omitempty"`
+}
+
+// BottlerocketBootSettings holds the boot-related settings for bottlerocket nodes.
+type BottlerocketBootSettings struct {
+	BootKernelParameters map[string][]string `json:"bootKernelParameters,omitempty"`
 }
 
 // Pause defines the pause image repo and tag that should be run on the bootstrapped nodes.
@@ -177,6 +238,13 @@ type BottlerocketBootstrap struct {
 	ImageMeta `json:",inline"`
 }
 
+// BottlerocketAdmin holds the settings of admin container for bottlerocket nodes
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketAdmin struct {
+	// ImageMeta allows to customize the image used for the BottlerocketAdmin component
+	ImageMeta `json:",inline"`
+}
+
 // BottlerocketControl holds the settings of control container for bottlerocket nodes
 // This setting is ONLY for bottlerocket nodes.
 type BottlerocketControl struct {
@@ -200,6 +268,21 @@ type RegistryMirrorConfiguration struct {
 
 	// CACert defines the CA cert for the registry mirror
 	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
 }
 
 // ControlPlaneComponent holds settings common to control plane component of the cluster.
@@ -423,6 +506,11 @@ type JoinConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
@@ -458,6 +546,72 @@ type JoinConfiguration struct {
 	// If nil, no additional control plane instance will be deployed.
 	// +optional
 	ControlPlane *JoinControlPlane `json:"controlPlane,omitempty"`
+
+	// BottlerocketCustomHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketCustomHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
+	// Bottlerocket holds configuration for certain bottlerocket settings.
+	// This is only for bottlerocket.
+	// +optional
+	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
+}
+
+// BottlerocketHostContainer describes a host image for Bottlerocket
+type BottlerocketHostContainer struct {
+	// Name is the host container name that will be given to the container in BR's `apiserver`
+	// +kubebuilder:validation:Required
+	Name string `json:"name"`
+	// Superpowered indicates if the container will be superpowered
+	// +kubebuilder:validation:Required
+	Superpowered bool `json:"superpowered"`
+	// ImageMeta is the actual location of the container image
+	ImageMeta `json:"source"`
+	// UserData is the userdata that will be attached to the image.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// ImageMeta is the actual image used for Bottlerocket bootstrap.
+	ImageMeta `json:",inline"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// CertBundle holds the cert data.
+type CertBundle struct {
+	// Name is the name of the cert bundle.
+	Name string `json:"name"`
+
+	// Data is the actual cert.
+	Data string `json:"data"`
 }
 
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
index 86cb36aa4..44dfe32bb 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
@@ -88,6 +88,26 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketAdmin)(nil), (*v1beta1.BottlerocketAdmin)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(a.(*BottlerocketAdmin), b.(*v1beta1.BottlerocketAdmin), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketAdmin)(nil), (*BottlerocketAdmin)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta2_BottlerocketAdmin(a.(*v1beta1.BottlerocketAdmin), b.(*BottlerocketAdmin), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketBootSettings)(nil), (*v1beta1.BottlerocketBootSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(a.(*BottlerocketBootSettings), b.(*v1beta1.BottlerocketBootSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketBootSettings)(nil), (*BottlerocketBootSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta2_BottlerocketBootSettings(a.(*v1beta1.BottlerocketBootSettings), b.(*BottlerocketBootSettings), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*BottlerocketBootstrap)(nil), (*v1beta1.BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta2_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(a.(*BottlerocketBootstrap), b.(*v1beta1.BottlerocketBootstrap), scope)
 	}); err != nil {
@@ -98,6 +118,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketBootstrapContainer)(nil), (*v1beta1.BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(a.(*BottlerocketBootstrapContainer), b.(*v1beta1.BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketBootstrapContainer)(nil), (*BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta2_BottlerocketBootstrapContainer(a.(*v1beta1.BottlerocketBootstrapContainer), b.(*BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*BottlerocketControl)(nil), (*v1beta1.BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta2_BottlerocketControl_To_v1beta1_BottlerocketControl(a.(*BottlerocketControl), b.(*v1beta1.BottlerocketControl), scope)
 	}); err != nil {
@@ -108,6 +138,56 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketHostContainer)(nil), (*v1beta1.BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(a.(*BottlerocketHostContainer), b.(*v1beta1.BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketHostContainer)(nil), (*BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta2_BottlerocketHostContainer(a.(*v1beta1.BottlerocketHostContainer), b.(*BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketKernelSettings)(nil), (*v1beta1.BottlerocketKernelSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(a.(*BottlerocketKernelSettings), b.(*v1beta1.BottlerocketKernelSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketKernelSettings)(nil), (*BottlerocketKernelSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta2_BottlerocketKernelSettings(a.(*v1beta1.BottlerocketKernelSettings), b.(*BottlerocketKernelSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketKubernetesSettings)(nil), (*v1beta1.BottlerocketKubernetesSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(a.(*BottlerocketKubernetesSettings), b.(*v1beta1.BottlerocketKubernetesSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketKubernetesSettings)(nil), (*BottlerocketKubernetesSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta2_BottlerocketKubernetesSettings(a.(*v1beta1.BottlerocketKubernetesSettings), b.(*BottlerocketKubernetesSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketSettings)(nil), (*v1beta1.BottlerocketSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_BottlerocketSettings_To_v1beta1_BottlerocketSettings(a.(*BottlerocketSettings), b.(*v1beta1.BottlerocketSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketSettings)(nil), (*BottlerocketSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta2_BottlerocketSettings(a.(*v1beta1.BottlerocketSettings), b.(*BottlerocketSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*CertBundle)(nil), (*v1beta1.CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_CertBundle_To_v1beta1_CertBundle(a.(*CertBundle), b.(*v1beta1.CertBundle), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.CertBundle)(nil), (*CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_CertBundle_To_upstreamv1beta2_CertBundle(a.(*v1beta1.CertBundle), b.(*CertBundle), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*v1beta1.ClusterConfiguration)(nil), (*ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta1_ClusterConfiguration_To_upstreamv1beta2_ClusterConfiguration(a.(*v1beta1.ClusterConfiguration), b.(*ClusterConfiguration), scope)
 	}); err != nil {
@@ -203,6 +283,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*Mirror)(nil), (*v1beta1.Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta2_Mirror_To_v1beta1_Mirror(a.(*Mirror), b.(*v1beta1.Mirror), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.Mirror)(nil), (*Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_Mirror_To_upstreamv1beta2_Mirror(a.(*v1beta1.Mirror), b.(*Mirror), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*Networking)(nil), (*v1beta1.Networking)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta2_Networking_To_v1beta1_Networking(a.(*Networking), b.(*v1beta1.Networking), scope)
 	}); err != nil {
@@ -429,6 +519,50 @@ func Convert_v1beta1_BootstrapTokenString_To_upstreamv1beta2_BootstrapTokenStrin
 	return autoConvert_v1beta1_BootstrapTokenString_To_upstreamv1beta2_BootstrapTokenString(in, out, s)
 }
 
+func autoConvert_upstreamv1beta2_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in *BottlerocketAdmin, out *v1beta1.BottlerocketAdmin, s conversion.Scope) error {
+	if err := Convert_upstreamv1beta2_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_upstreamv1beta2_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin is an autogenerated conversion function.
+func Convert_upstreamv1beta2_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in *BottlerocketAdmin, out *v1beta1.BottlerocketAdmin, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketAdmin_To_upstreamv1beta2_BottlerocketAdmin(in *v1beta1.BottlerocketAdmin, out *BottlerocketAdmin, s conversion.Scope) error {
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta2_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta2_BottlerocketAdmin is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta2_BottlerocketAdmin(in *v1beta1.BottlerocketAdmin, out *BottlerocketAdmin, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketAdmin_To_upstreamv1beta2_BottlerocketAdmin(in, out, s)
+}
+
+func autoConvert_upstreamv1beta2_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in *BottlerocketBootSettings, out *v1beta1.BottlerocketBootSettings, s conversion.Scope) error {
+	out.BootKernelParameters = *(*map[string][]string)(unsafe.Pointer(&in.BootKernelParameters))
+	return nil
+}
+
+// Convert_upstreamv1beta2_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta2_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in *BottlerocketBootSettings, out *v1beta1.BottlerocketBootSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta2_BottlerocketBootSettings(in *v1beta1.BottlerocketBootSettings, out *BottlerocketBootSettings, s conversion.Scope) error {
+	out.BootKernelParameters = *(*map[string][]string)(unsafe.Pointer(&in.BootKernelParameters))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta2_BottlerocketBootSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta2_BottlerocketBootSettings(in *v1beta1.BottlerocketBootSettings, out *BottlerocketBootSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta2_BottlerocketBootSettings(in, out, s)
+}
+
 func autoConvert_upstreamv1beta2_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(in *BottlerocketBootstrap, out *v1beta1.BottlerocketBootstrap, s conversion.Scope) error {
 	if err := Convert_upstreamv1beta2_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
 		return err
@@ -453,6 +587,38 @@ func Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta2_BottlerocketBootst
 	return autoConvert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta2_BottlerocketBootstrap(in, out, s)
 }
 
+func autoConvert_upstreamv1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta1.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	if err := Convert_upstreamv1beta2_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_upstreamv1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer is an autogenerated conversion function.
+func Convert_upstreamv1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta1.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta2_BottlerocketBootstrapContainer(in *v1beta1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta2_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta2_BottlerocketBootstrapContainer is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta2_BottlerocketBootstrapContainer(in *v1beta1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta2_BottlerocketBootstrapContainer(in, out, s)
+}
+
 func autoConvert_upstreamv1beta2_BottlerocketControl_To_v1beta1_BottlerocketControl(in *BottlerocketControl, out *v1beta1.BottlerocketControl, s conversion.Scope) error {
 	if err := Convert_upstreamv1beta2_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
 		return err
@@ -477,6 +643,143 @@ func Convert_v1beta1_BottlerocketControl_To_upstreamv1beta2_BottlerocketControl(
 	return autoConvert_v1beta1_BottlerocketControl_To_upstreamv1beta2_BottlerocketControl(in, out, s)
 }
 
+func autoConvert_upstreamv1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in *BottlerocketHostContainer, out *v1beta1.BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	if err := Convert_upstreamv1beta2_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_upstreamv1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer is an autogenerated conversion function.
+func Convert_upstreamv1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in *BottlerocketHostContainer, out *v1beta1.BottlerocketHostContainer, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta2_BottlerocketHostContainer(in *v1beta1.BottlerocketHostContainer, out *BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta2_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta2_BottlerocketHostContainer is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta2_BottlerocketHostContainer(in *v1beta1.BottlerocketHostContainer, out *BottlerocketHostContainer, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta2_BottlerocketHostContainer(in, out, s)
+}
+
+func autoConvert_upstreamv1beta2_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in *BottlerocketKernelSettings, out *v1beta1.BottlerocketKernelSettings, s conversion.Scope) error {
+	out.SysctlSettings = *(*map[string]string)(unsafe.Pointer(&in.SysctlSettings))
+	return nil
+}
+
+// Convert_upstreamv1beta2_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta2_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in *BottlerocketKernelSettings, out *v1beta1.BottlerocketKernelSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta2_BottlerocketKernelSettings(in *v1beta1.BottlerocketKernelSettings, out *BottlerocketKernelSettings, s conversion.Scope) error {
+	out.SysctlSettings = *(*map[string]string)(unsafe.Pointer(&in.SysctlSettings))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta2_BottlerocketKernelSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta2_BottlerocketKernelSettings(in *v1beta1.BottlerocketKernelSettings, out *BottlerocketKernelSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta2_BottlerocketKernelSettings(in, out, s)
+}
+
+func autoConvert_upstreamv1beta2_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in *BottlerocketKubernetesSettings, out *v1beta1.BottlerocketKubernetesSettings, s conversion.Scope) error {
+	out.MaxPods = in.MaxPods
+	out.AllowedUnsafeSysctls = *(*[]string)(unsafe.Pointer(&in.AllowedUnsafeSysctls))
+	out.ClusterDNSIPs = *(*[]string)(unsafe.Pointer(&in.ClusterDNSIPs))
+	return nil
+}
+
+// Convert_upstreamv1beta2_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta2_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in *BottlerocketKubernetesSettings, out *v1beta1.BottlerocketKubernetesSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in, out, s)
+}
+
+// Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta2_BottlerocketKubernetesSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta2_BottlerocketKubernetesSettings(in *v1beta1.BottlerocketKubernetesSettings, out *BottlerocketKubernetesSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta2_BottlerocketKubernetesSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta2_BottlerocketKubernetesSettings(in *v1beta1.BottlerocketKubernetesSettings, out *BottlerocketKubernetesSettings, s conversion.Scope) error {
+	out.AllowedUnsafeSysctls = *(*[]string)(unsafe.Pointer(&in.AllowedUnsafeSysctls))
+	out.ClusterDNSIPs = *(*[]string)(unsafe.Pointer(&in.ClusterDNSIPs))
+
+	out.MaxPods = in.MaxPods
+	return nil
+}
+
+func autoConvert_upstreamv1beta2_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in *BottlerocketSettings, out *v1beta1.BottlerocketSettings, s conversion.Scope) error {
+	if in.Kubernetes != nil {
+		in, out := &in.Kubernetes, &out.Kubernetes
+		*out = new(v1beta1.BottlerocketKubernetesSettings)
+		if err := Convert_upstreamv1beta2_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Kubernetes = nil
+	}
+	out.Kernel = (*v1beta1.BottlerocketKernelSettings)(unsafe.Pointer(in.Kernel))
+	out.Boot = (*v1beta1.BottlerocketBootSettings)(unsafe.Pointer(in.Boot))
+	return nil
+}
+
+// Convert_upstreamv1beta2_BottlerocketSettings_To_v1beta1_BottlerocketSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta2_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in *BottlerocketSettings, out *v1beta1.BottlerocketSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketSettings_To_upstreamv1beta2_BottlerocketSettings(in *v1beta1.BottlerocketSettings, out *BottlerocketSettings, s conversion.Scope) error {
+	if in.Kubernetes != nil {
+		in, out := &in.Kubernetes, &out.Kubernetes
+		*out = new(BottlerocketKubernetesSettings)
+		if err := Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta2_BottlerocketKubernetesSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Kubernetes = nil
+	}
+	out.Kernel = (*BottlerocketKernelSettings)(unsafe.Pointer(in.Kernel))
+	out.Boot = (*BottlerocketBootSettings)(unsafe.Pointer(in.Boot))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta2_BottlerocketSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta2_BottlerocketSettings(in *v1beta1.BottlerocketSettings, out *BottlerocketSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketSettings_To_upstreamv1beta2_BottlerocketSettings(in, out, s)
+}
+
+func autoConvert_upstreamv1beta2_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_upstreamv1beta2_CertBundle_To_v1beta1_CertBundle is an autogenerated conversion function.
+func Convert_upstreamv1beta2_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_CertBundle_To_v1beta1_CertBundle(in, out, s)
+}
+
+func autoConvert_v1beta1_CertBundle_To_upstreamv1beta2_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_v1beta1_CertBundle_To_upstreamv1beta2_CertBundle is an autogenerated conversion function.
+func Convert_v1beta1_CertBundle_To_upstreamv1beta2_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	return autoConvert_v1beta1_CertBundle_To_upstreamv1beta2_CertBundle(in, out, s)
+}
+
 func autoConvert_upstreamv1beta2_ClusterConfiguration_To_v1beta1_ClusterConfiguration(in *ClusterConfiguration, out *v1beta1.ClusterConfiguration, s conversion.Scope) error {
 	if err := Convert_upstreamv1beta2_Pause_To_v1beta1_Pause(&in.Pause, &out.Pause, s); err != nil {
 		return err
@@ -484,6 +787,9 @@ func autoConvert_upstreamv1beta2_ClusterConfiguration_To_v1beta1_ClusterConfigur
 	if err := Convert_upstreamv1beta2_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	if err := Convert_upstreamv1beta2_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_upstreamv1beta2_BottlerocketControl_To_v1beta1_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -518,6 +824,18 @@ func autoConvert_upstreamv1beta2_ClusterConfiguration_To_v1beta1_ClusterConfigur
 	// WARNING: in.UseHyperKubeImage requires manual conversion: does not exist in peer-type
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
+	out.BottlerocketHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(v1beta1.BottlerocketSettings)
+		if err := Convert_upstreamv1beta2_BottlerocketSettings_To_v1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -528,7 +846,9 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta2_ClusterConfigur
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta2_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
-	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
+	if err := Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta2_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta2_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -562,10 +882,18 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta2_ClusterConfigur
 	out.ImageRepository = in.ImageRepository
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
-	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
-	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
+	out.BottlerocketHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(BottlerocketSettings)
+		if err := Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta2_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -836,6 +1164,9 @@ func autoConvert_upstreamv1beta2_JoinConfiguration_To_v1beta1_JoinConfiguration(
 	if err := Convert_upstreamv1beta2_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	if err := Convert_upstreamv1beta2_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_upstreamv1beta2_BottlerocketControl_To_v1beta1_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -861,6 +1192,18 @@ func autoConvert_upstreamv1beta2_JoinConfiguration_To_v1beta1_JoinConfiguration(
 	} else {
 		out.ControlPlane = nil
 	}
+	out.BottlerocketCustomHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(v1beta1.BottlerocketSettings)
+		if err := Convert_upstreamv1beta2_BottlerocketSettings_To_v1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -876,7 +1219,9 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta2_JoinConfiguration(
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta2_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
-	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
+	if err := Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta2_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta2_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -904,10 +1249,18 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta2_JoinConfiguration(
 	}
 	// WARNING: in.SkipPhases requires manual conversion: does not exist in peer-type
 	// WARNING: in.Patches requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
-	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
+	out.BottlerocketCustomHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(BottlerocketSettings)
+		if err := Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta2_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -959,6 +1312,28 @@ func autoConvert_v1beta1_LocalEtcd_To_upstreamv1beta2_LocalEtcd(in *v1beta1.Loca
 	return nil
 }
 
+func autoConvert_upstreamv1beta2_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_upstreamv1beta2_Mirror_To_v1beta1_Mirror is an autogenerated conversion function.
+func Convert_upstreamv1beta2_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta2_Mirror_To_v1beta1_Mirror(in, out, s)
+}
+
+func autoConvert_v1beta1_Mirror_To_upstreamv1beta2_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1beta1_Mirror_To_upstreamv1beta2_Mirror is an autogenerated conversion function.
+func Convert_v1beta1_Mirror_To_upstreamv1beta2_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	return autoConvert_v1beta1_Mirror_To_upstreamv1beta2_Mirror(in, out, s)
+}
+
 func autoConvert_upstreamv1beta2_Networking_To_v1beta1_Networking(in *Networking, out *v1beta1.Networking, s conversion.Scope) error {
 	out.ServiceSubnet = in.ServiceSubnet
 	out.PodSubnet = in.PodSubnet
@@ -1057,6 +1432,7 @@ func Convert_v1beta1_ProxyConfiguration_To_upstreamv1beta2_ProxyConfiguration(in
 func autoConvert_upstreamv1beta2_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(in *RegistryMirrorConfiguration, out *v1beta1.RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/bootstrap/kubeadm/types/upstreamv1beta3/types.go b/bootstrap/kubeadm/types/upstreamv1beta3/types.go
index ea1301706..17e1d0c2b 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta3/types.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta3/types.go
@@ -83,6 +83,10 @@ type ClusterConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
@@ -158,6 +162,63 @@ type ClusterConfiguration struct {
 	// The cluster name
 	// +optional
 	ClusterName string `json:"clusterName,omitempty"`
+
+	// BottlerocketHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
+	// Bottlerocket holds configuration for certain bottlerocket settings.
+	// This is only for bottlerocket.
+	// +optional
+	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
+}
+
+// BottlerocketSettings define bottlerocket settings that can be configured on bottlerocket nodes.
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketSettings struct {
+	// Kubernetes holds the kubernetes settings for bottlerocket nodes.
+	Kubernetes *BottlerocketKubernetesSettings `json:"kubernetes,omitempty"`
+
+	// KernelSettings contains additional kernel settings for Bottlerocket.
+	// +optional
+	Kernel *BottlerocketKernelSettings `json:"kernel,omitempty"`
+
+	// Boot holds the boot-related settings for bottlerocket nodes
+	Boot *BottlerocketBootSettings `json:"boot,omitempty"`
+}
+
+// BottlerocketKubernetesSettings holds the settings for kubernetes on bottlerocket nodes.
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketKubernetesSettings struct {
+	// MaxPods defines the maximum number of pods that can run on a node.
+	MaxPods int `json:"maxPods,omitempty"`
+
+	// AllowedUnsafeSysctls defines the list of unsafe sysctls that can be set on a node.
+	AllowedUnsafeSysctls []string `json:"allowedUnsafeSysctls,omitempty"`
+
+	// ClusterDNSIPs defines IP addresses of the DNS servers.
+	ClusterDNSIPs []string `json:"clusterDNSIPs,omitempty"`
+}
+
+// BottlerocketKernelSettings holds the kernel settings for bottlerocket nodes
+type BottlerocketKernelSettings struct {
+	// SysctlSettings defines the kernel sysctl settings to set for bottlerocket nodes.
+	SysctlSettings map[string]string `json:"sysctlSettings,omitempty"`
+}
+
+// BottlerocketBootSettings holds the boot-related settings for bottlerocket nodes.
+type BottlerocketBootSettings struct {
+	BootKernelParameters map[string][]string `json:"bootKernelParameters,omitempty"`
 }
 
 // Pause defines the pause image repo and tag that should be run on the bootstrapped nodes.
@@ -174,6 +235,13 @@ type BottlerocketBootstrap struct {
 	ImageMeta `json:",inline"`
 }
 
+// BottlerocketAdmin holds the settings of admin container for bottlerocket nodes
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketAdmin struct {
+	// ImageMeta allows to customize the image used for the BottlerocketAdmin component
+	ImageMeta `json:",inline"`
+}
+
 // BottlerocketControl holds the settings of control container for bottlerocket nodes
 // This setting is ONLY for bottlerocket nodes.
 type BottlerocketControl struct {
@@ -197,6 +265,21 @@ type RegistryMirrorConfiguration struct {
 
 	// CACert defines the CA cert for the registry mirror
 	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
 }
 
 // ControlPlaneComponent holds settings common to control plane component of the cluster.
@@ -409,6 +492,11 @@ type JoinConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
@@ -442,6 +530,25 @@ type JoinConfiguration struct {
 	// +optional
 	ControlPlane *JoinControlPlane `json:"controlPlane,omitempty"`
 
+	// BottlerocketCustomHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketCustomHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
+	// Bottlerocket holds configuration for certain bottlerocket settings.
+	// This is only for bottlerocket.
+	// +optional
+	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
+
 	// SkipPhases is a list of phases to skip during command execution.
 	// The list of phases can be obtained with the "kubeadm join --help" command.
 	// The flag "--skip-phases" takes precedence over this field.
@@ -454,6 +561,53 @@ type JoinConfiguration struct {
 	Patches *Patches `json:"patches,omitempty"`
 }
 
+// BottlerocketHostContainer describes a host image for Bottlerocket
+type BottlerocketHostContainer struct {
+	// Name is the host container name that will be given to the container in BR's `apiserver`
+	// +kubebuilder:validation:Required
+	Name string `json:"name"`
+	// Superpowered indicates if the container will be superpowered
+	// +kubebuilder:validation:Required
+	Superpowered bool `json:"superpowered"`
+	// ImageMeta is the actual location of the container image
+	ImageMeta `json:"source"`
+	// UserData is the userdata that will be attached to the image.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// ImageMeta is the actual image used for Bottlerocket bootstrap.
+	ImageMeta `json:",inline"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// CertBundle holds the cert data.
+type CertBundle struct {
+	// Name is the name of the cert bundle.
+	Name string `json:"name"`
+
+	// Data is the actual cert.
+	Data string `json:"data"`
+}
+
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
 type JoinControlPlane struct {
 	// LocalAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
index d98974381..6e33f01d3 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
@@ -88,6 +88,26 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketAdmin)(nil), (*v1beta1.BottlerocketAdmin)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(a.(*BottlerocketAdmin), b.(*v1beta1.BottlerocketAdmin), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketAdmin)(nil), (*BottlerocketAdmin)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta3_BottlerocketAdmin(a.(*v1beta1.BottlerocketAdmin), b.(*BottlerocketAdmin), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketBootSettings)(nil), (*v1beta1.BottlerocketBootSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(a.(*BottlerocketBootSettings), b.(*v1beta1.BottlerocketBootSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketBootSettings)(nil), (*BottlerocketBootSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta3_BottlerocketBootSettings(a.(*v1beta1.BottlerocketBootSettings), b.(*BottlerocketBootSettings), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*BottlerocketBootstrap)(nil), (*v1beta1.BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta3_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(a.(*BottlerocketBootstrap), b.(*v1beta1.BottlerocketBootstrap), scope)
 	}); err != nil {
@@ -98,6 +118,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketBootstrapContainer)(nil), (*v1beta1.BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(a.(*BottlerocketBootstrapContainer), b.(*v1beta1.BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketBootstrapContainer)(nil), (*BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta3_BottlerocketBootstrapContainer(a.(*v1beta1.BottlerocketBootstrapContainer), b.(*BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*BottlerocketControl)(nil), (*v1beta1.BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta3_BottlerocketControl_To_v1beta1_BottlerocketControl(a.(*BottlerocketControl), b.(*v1beta1.BottlerocketControl), scope)
 	}); err != nil {
@@ -108,6 +138,56 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketHostContainer)(nil), (*v1beta1.BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(a.(*BottlerocketHostContainer), b.(*v1beta1.BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketHostContainer)(nil), (*BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta3_BottlerocketHostContainer(a.(*v1beta1.BottlerocketHostContainer), b.(*BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketKernelSettings)(nil), (*v1beta1.BottlerocketKernelSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(a.(*BottlerocketKernelSettings), b.(*v1beta1.BottlerocketKernelSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketKernelSettings)(nil), (*BottlerocketKernelSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta3_BottlerocketKernelSettings(a.(*v1beta1.BottlerocketKernelSettings), b.(*BottlerocketKernelSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketKubernetesSettings)(nil), (*v1beta1.BottlerocketKubernetesSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(a.(*BottlerocketKubernetesSettings), b.(*v1beta1.BottlerocketKubernetesSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketKubernetesSettings)(nil), (*BottlerocketKubernetesSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta3_BottlerocketKubernetesSettings(a.(*v1beta1.BottlerocketKubernetesSettings), b.(*BottlerocketKubernetesSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketSettings)(nil), (*v1beta1.BottlerocketSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_BottlerocketSettings_To_v1beta1_BottlerocketSettings(a.(*BottlerocketSettings), b.(*v1beta1.BottlerocketSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketSettings)(nil), (*BottlerocketSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta3_BottlerocketSettings(a.(*v1beta1.BottlerocketSettings), b.(*BottlerocketSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*CertBundle)(nil), (*v1beta1.CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_CertBundle_To_v1beta1_CertBundle(a.(*CertBundle), b.(*v1beta1.CertBundle), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.CertBundle)(nil), (*CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_CertBundle_To_upstreamv1beta3_CertBundle(a.(*v1beta1.CertBundle), b.(*CertBundle), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*ClusterConfiguration)(nil), (*v1beta1.ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta3_ClusterConfiguration_To_v1beta1_ClusterConfiguration(a.(*ClusterConfiguration), b.(*v1beta1.ClusterConfiguration), scope)
 	}); err != nil {
@@ -213,6 +293,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*Mirror)(nil), (*v1beta1.Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta3_Mirror_To_v1beta1_Mirror(a.(*Mirror), b.(*v1beta1.Mirror), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.Mirror)(nil), (*Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_Mirror_To_upstreamv1beta3_Mirror(a.(*v1beta1.Mirror), b.(*Mirror), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*Networking)(nil), (*v1beta1.Networking)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta3_Networking_To_v1beta1_Networking(a.(*Networking), b.(*v1beta1.Networking), scope)
 	}); err != nil {
@@ -429,6 +519,50 @@ func Convert_v1beta1_BootstrapTokenString_To_upstreamv1beta3_BootstrapTokenStrin
 	return autoConvert_v1beta1_BootstrapTokenString_To_upstreamv1beta3_BootstrapTokenString(in, out, s)
 }
 
+func autoConvert_upstreamv1beta3_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in *BottlerocketAdmin, out *v1beta1.BottlerocketAdmin, s conversion.Scope) error {
+	if err := Convert_upstreamv1beta3_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_upstreamv1beta3_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin is an autogenerated conversion function.
+func Convert_upstreamv1beta3_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in *BottlerocketAdmin, out *v1beta1.BottlerocketAdmin, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketAdmin_To_upstreamv1beta3_BottlerocketAdmin(in *v1beta1.BottlerocketAdmin, out *BottlerocketAdmin, s conversion.Scope) error {
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta3_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta3_BottlerocketAdmin is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta3_BottlerocketAdmin(in *v1beta1.BottlerocketAdmin, out *BottlerocketAdmin, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketAdmin_To_upstreamv1beta3_BottlerocketAdmin(in, out, s)
+}
+
+func autoConvert_upstreamv1beta3_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in *BottlerocketBootSettings, out *v1beta1.BottlerocketBootSettings, s conversion.Scope) error {
+	out.BootKernelParameters = *(*map[string][]string)(unsafe.Pointer(&in.BootKernelParameters))
+	return nil
+}
+
+// Convert_upstreamv1beta3_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta3_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in *BottlerocketBootSettings, out *v1beta1.BottlerocketBootSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta3_BottlerocketBootSettings(in *v1beta1.BottlerocketBootSettings, out *BottlerocketBootSettings, s conversion.Scope) error {
+	out.BootKernelParameters = *(*map[string][]string)(unsafe.Pointer(&in.BootKernelParameters))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta3_BottlerocketBootSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta3_BottlerocketBootSettings(in *v1beta1.BottlerocketBootSettings, out *BottlerocketBootSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta3_BottlerocketBootSettings(in, out, s)
+}
+
 func autoConvert_upstreamv1beta3_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(in *BottlerocketBootstrap, out *v1beta1.BottlerocketBootstrap, s conversion.Scope) error {
 	if err := Convert_upstreamv1beta3_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
 		return err
@@ -453,6 +587,38 @@ func Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta3_BottlerocketBootst
 	return autoConvert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta3_BottlerocketBootstrap(in, out, s)
 }
 
+func autoConvert_upstreamv1beta3_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta1.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	if err := Convert_upstreamv1beta3_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_upstreamv1beta3_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer is an autogenerated conversion function.
+func Convert_upstreamv1beta3_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta1.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta3_BottlerocketBootstrapContainer(in *v1beta1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta3_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta3_BottlerocketBootstrapContainer is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta3_BottlerocketBootstrapContainer(in *v1beta1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta3_BottlerocketBootstrapContainer(in, out, s)
+}
+
 func autoConvert_upstreamv1beta3_BottlerocketControl_To_v1beta1_BottlerocketControl(in *BottlerocketControl, out *v1beta1.BottlerocketControl, s conversion.Scope) error {
 	if err := Convert_upstreamv1beta3_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
 		return err
@@ -477,6 +643,142 @@ func Convert_v1beta1_BottlerocketControl_To_upstreamv1beta3_BottlerocketControl(
 	return autoConvert_v1beta1_BottlerocketControl_To_upstreamv1beta3_BottlerocketControl(in, out, s)
 }
 
+func autoConvert_upstreamv1beta3_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in *BottlerocketHostContainer, out *v1beta1.BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	if err := Convert_upstreamv1beta3_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_upstreamv1beta3_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer is an autogenerated conversion function.
+func Convert_upstreamv1beta3_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in *BottlerocketHostContainer, out *v1beta1.BottlerocketHostContainer, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta3_BottlerocketHostContainer(in *v1beta1.BottlerocketHostContainer, out *BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta3_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta3_BottlerocketHostContainer is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta3_BottlerocketHostContainer(in *v1beta1.BottlerocketHostContainer, out *BottlerocketHostContainer, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta3_BottlerocketHostContainer(in, out, s)
+}
+
+func autoConvert_upstreamv1beta3_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in *BottlerocketKernelSettings, out *v1beta1.BottlerocketKernelSettings, s conversion.Scope) error {
+	out.SysctlSettings = *(*map[string]string)(unsafe.Pointer(&in.SysctlSettings))
+	return nil
+}
+
+// Convert_upstreamv1beta3_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta3_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in *BottlerocketKernelSettings, out *v1beta1.BottlerocketKernelSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta3_BottlerocketKernelSettings(in *v1beta1.BottlerocketKernelSettings, out *BottlerocketKernelSettings, s conversion.Scope) error {
+	out.SysctlSettings = *(*map[string]string)(unsafe.Pointer(&in.SysctlSettings))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta3_BottlerocketKernelSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta3_BottlerocketKernelSettings(in *v1beta1.BottlerocketKernelSettings, out *BottlerocketKernelSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta3_BottlerocketKernelSettings(in, out, s)
+}
+
+func autoConvert_upstreamv1beta3_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in *BottlerocketKubernetesSettings, out *v1beta1.BottlerocketKubernetesSettings, s conversion.Scope) error {
+	out.MaxPods = in.MaxPods
+	out.AllowedUnsafeSysctls = *(*[]string)(unsafe.Pointer(&in.AllowedUnsafeSysctls))
+	out.ClusterDNSIPs = *(*[]string)(unsafe.Pointer(&in.ClusterDNSIPs))
+	return nil
+}
+
+// Convert_upstreamv1beta3_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta3_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in *BottlerocketKubernetesSettings, out *v1beta1.BottlerocketKubernetesSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in, out, s)
+}
+
+// Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta3_BottlerocketKubernetesSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta3_BottlerocketKubernetesSettings(in *v1beta1.BottlerocketKubernetesSettings, out *BottlerocketKubernetesSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta3_BottlerocketKubernetesSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta3_BottlerocketKubernetesSettings(in *v1beta1.BottlerocketKubernetesSettings, out *BottlerocketKubernetesSettings, s conversion.Scope) error {
+	out.AllowedUnsafeSysctls = *(*[]string)(unsafe.Pointer(&in.AllowedUnsafeSysctls))
+	out.ClusterDNSIPs = *(*[]string)(unsafe.Pointer(&in.ClusterDNSIPs))
+	out.MaxPods = in.MaxPods
+	return nil
+}
+
+func autoConvert_upstreamv1beta3_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in *BottlerocketSettings, out *v1beta1.BottlerocketSettings, s conversion.Scope) error {
+	if in.Kubernetes != nil {
+		in, out := &in.Kubernetes, &out.Kubernetes
+		*out = new(v1beta1.BottlerocketKubernetesSettings)
+		if err := Convert_upstreamv1beta3_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Kubernetes = nil
+	}
+	out.Kernel = (*v1beta1.BottlerocketKernelSettings)(unsafe.Pointer(in.Kernel))
+	out.Boot = (*v1beta1.BottlerocketBootSettings)(unsafe.Pointer(in.Boot))
+	return nil
+}
+
+// Convert_upstreamv1beta3_BottlerocketSettings_To_v1beta1_BottlerocketSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta3_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in *BottlerocketSettings, out *v1beta1.BottlerocketSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketSettings_To_upstreamv1beta3_BottlerocketSettings(in *v1beta1.BottlerocketSettings, out *BottlerocketSettings, s conversion.Scope) error {
+	if in.Kubernetes != nil {
+		in, out := &in.Kubernetes, &out.Kubernetes
+		*out = new(BottlerocketKubernetesSettings)
+		if err := Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta3_BottlerocketKubernetesSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Kubernetes = nil
+	}
+	out.Kernel = (*BottlerocketKernelSettings)(unsafe.Pointer(in.Kernel))
+	out.Boot = (*BottlerocketBootSettings)(unsafe.Pointer(in.Boot))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta3_BottlerocketSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta3_BottlerocketSettings(in *v1beta1.BottlerocketSettings, out *BottlerocketSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketSettings_To_upstreamv1beta3_BottlerocketSettings(in, out, s)
+}
+
+func autoConvert_upstreamv1beta3_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_upstreamv1beta3_CertBundle_To_v1beta1_CertBundle is an autogenerated conversion function.
+func Convert_upstreamv1beta3_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_CertBundle_To_v1beta1_CertBundle(in, out, s)
+}
+
+func autoConvert_v1beta1_CertBundle_To_upstreamv1beta3_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_v1beta1_CertBundle_To_upstreamv1beta3_CertBundle is an autogenerated conversion function.
+func Convert_v1beta1_CertBundle_To_upstreamv1beta3_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	return autoConvert_v1beta1_CertBundle_To_upstreamv1beta3_CertBundle(in, out, s)
+}
+
 func autoConvert_upstreamv1beta3_ClusterConfiguration_To_v1beta1_ClusterConfiguration(in *ClusterConfiguration, out *v1beta1.ClusterConfiguration, s conversion.Scope) error {
 	if err := Convert_upstreamv1beta3_Pause_To_v1beta1_Pause(&in.Pause, &out.Pause, s); err != nil {
 		return err
@@ -484,6 +786,9 @@ func autoConvert_upstreamv1beta3_ClusterConfiguration_To_v1beta1_ClusterConfigur
 	if err := Convert_upstreamv1beta3_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	if err := Convert_upstreamv1beta3_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_upstreamv1beta3_BottlerocketControl_To_v1beta1_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -517,6 +822,18 @@ func autoConvert_upstreamv1beta3_ClusterConfiguration_To_v1beta1_ClusterConfigur
 	out.ImageRepository = in.ImageRepository
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
+	out.BottlerocketHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(v1beta1.BottlerocketSettings)
+		if err := Convert_upstreamv1beta3_BottlerocketSettings_To_v1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -532,7 +849,9 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta3_ClusterConfigur
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta3_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
-	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
+	if err := Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta3_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta3_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -566,10 +885,18 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta3_ClusterConfigur
 	out.ImageRepository = in.ImageRepository
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
-	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
-	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
+	out.BottlerocketHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(BottlerocketSettings)
+		if err := Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta3_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -831,6 +1158,9 @@ func autoConvert_upstreamv1beta3_JoinConfiguration_To_v1beta1_JoinConfiguration(
 	if err := Convert_upstreamv1beta3_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	if err := Convert_upstreamv1beta3_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_upstreamv1beta3_BottlerocketControl_To_v1beta1_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -856,6 +1186,18 @@ func autoConvert_upstreamv1beta3_JoinConfiguration_To_v1beta1_JoinConfiguration(
 	} else {
 		out.ControlPlane = nil
 	}
+	out.BottlerocketCustomHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(v1beta1.BottlerocketSettings)
+		if err := Convert_upstreamv1beta3_BottlerocketSettings_To_v1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	out.SkipPhases = *(*[]string)(unsafe.Pointer(&in.SkipPhases))
 	out.Patches = (*v1beta1.Patches)(unsafe.Pointer(in.Patches))
 	return nil
@@ -873,7 +1215,9 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta3_JoinConfiguration(
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta3_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
-	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
+	if err := Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta3_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta3_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -901,10 +1245,18 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta3_JoinConfiguration(
 	}
 	out.SkipPhases = *(*[]string)(unsafe.Pointer(&in.SkipPhases))
 	out.Patches = (*Patches)(unsafe.Pointer(in.Patches))
-	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
-	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
+	out.BottlerocketCustomHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(BottlerocketSettings)
+		if err := Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta3_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -961,6 +1313,28 @@ func autoConvert_v1beta1_LocalEtcd_To_upstreamv1beta3_LocalEtcd(in *v1beta1.Loca
 	return nil
 }
 
+func autoConvert_upstreamv1beta3_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_upstreamv1beta3_Mirror_To_v1beta1_Mirror is an autogenerated conversion function.
+func Convert_upstreamv1beta3_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta3_Mirror_To_v1beta1_Mirror(in, out, s)
+}
+
+func autoConvert_v1beta1_Mirror_To_upstreamv1beta3_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1beta1_Mirror_To_upstreamv1beta3_Mirror is an autogenerated conversion function.
+func Convert_v1beta1_Mirror_To_upstreamv1beta3_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	return autoConvert_v1beta1_Mirror_To_upstreamv1beta3_Mirror(in, out, s)
+}
+
 func autoConvert_upstreamv1beta3_Networking_To_v1beta1_Networking(in *Networking, out *v1beta1.Networking, s conversion.Scope) error {
 	out.ServiceSubnet = in.ServiceSubnet
 	out.PodSubnet = in.PodSubnet
@@ -1080,6 +1454,7 @@ func Convert_v1beta1_ProxyConfiguration_To_upstreamv1beta3_ProxyConfiguration(in
 func autoConvert_upstreamv1beta3_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(in *RegistryMirrorConfiguration, out *v1beta1.RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/bootstrap/kubeadm/types/upstreamv1beta4/conversion_test.go b/bootstrap/kubeadm/types/upstreamv1beta4/conversion_test.go
index ada2c6415..999e3d6ff 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta4/conversion_test.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta4/conversion_test.go
@@ -82,7 +82,6 @@ func fuzzFuncs(_ runtimeserializer.CodecFactory) []interface{} {
 func clusterConfigurationFuzzer(obj *ClusterConfiguration, c fuzz.Continue) {
 	c.FuzzNoCustom(obj)
 
-	obj.Proxy = Proxy{}
 	obj.EncryptionAlgorithm = ""
 	obj.CACertificateValidityPeriod = nil
 	obj.CertificateValidityPeriod = nil
diff --git a/bootstrap/kubeadm/types/upstreamv1beta4/types.go b/bootstrap/kubeadm/types/upstreamv1beta4/types.go
index 19f937b89..8d881197a 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta4/types.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta4/types.go
@@ -82,6 +82,35 @@ type InitConfiguration struct {
 type ClusterConfiguration struct {
 	metav1.TypeMeta `json:",inline"`
 
+	// Pause holds the image source for pause container
+	// This is only for bottlerocket
+	// +optional
+	Pause Pause `json:"pause,omitempty"`
+
+	// BottlerocketBootstrap holds the image source for kubeadm bootstrap container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
+
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+	// BottlerocketControl holds the image source for control container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketControl BottlerocketControl `json:"bottlerocketControl,omitempty"`
+
+	// Proxy holds the https and no proxy information
+	// This is only for bottlerocket
+	// +optional
+	Proxy ProxyConfiguration `json:"proxy,omitempty"`
+
+	// RegistryMirror holds the image registry mirror information
+	// This is only for bottlerocket
+	// +optional
+	RegistryMirror RegistryMirrorConfiguration `json:"registryMirror,omitempty"`
+
 	// Etcd holds configuration for etcd.
 	// +optional
 	Etcd Etcd `json:"etcd,omitempty"`
@@ -124,9 +153,6 @@ type ClusterConfiguration struct {
 	// +optional
 	DNS DNS `json:"dns,omitempty"`
 
-	// Proxy defines the options for the proxy add-on installed in the cluster.
-	Proxy Proxy `json:"proxy,omitempty"`
-
 	// CertificatesDir specifies where to store or look for all required certificates.
 	// +optional
 	CertificatesDir string `json:"certificatesDir,omitempty"`
@@ -146,6 +172,25 @@ type ClusterConfiguration struct {
 	// +optional
 	ClusterName string `json:"clusterName,omitempty"`
 
+	// BottlerocketHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
+	// Bottlerocket holds configuration for certain bottlerocket settings.
+	// This is only for bottlerocket.
+	// +optional
+	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
+
 	// EncryptionAlgorithm holds the type of asymmetric encryption algorithm used for keys and certificates.
 	// Can be one of "RSA-2048" (default), "RSA-3072", "RSA-4096" or "ECDSA-P256".
 	// +optional
@@ -162,6 +207,105 @@ type ClusterConfiguration struct {
 	CACertificateValidityPeriod *metav1.Duration `json:"caCertificateValidityPeriod,omitempty"`
 }
 
+// BottlerocketSettings define bottlerocket settings that can be configured on bottlerocket nodes.
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketSettings struct {
+	// Kubernetes holds the kubernetes settings for bottlerocket nodes.
+	Kubernetes *BottlerocketKubernetesSettings `json:"kubernetes,omitempty"`
+
+	// KernelSettings contains additional kernel settings for Bottlerocket.
+	// +optional
+	Kernel *BottlerocketKernelSettings `json:"kernel,omitempty"`
+
+	// Boot holds the boot-related settings for bottlerocket nodes
+	Boot *BottlerocketBootSettings `json:"boot,omitempty"`
+}
+
+// BottlerocketKubernetesSettings holds the settings for kubernetes on bottlerocket nodes.
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketKubernetesSettings struct {
+	// MaxPods defines the maximum number of pods that can run on a node.
+	MaxPods int `json:"maxPods,omitempty"`
+
+	// AllowedUnsafeSysctls defines the list of unsafe sysctls that can be set on a node.
+	AllowedUnsafeSysctls []string `json:"allowedUnsafeSysctls,omitempty"`
+
+	// ClusterDNSIPs defines IP addresses of the DNS servers.
+	ClusterDNSIPs []string `json:"clusterDNSIPs,omitempty"`
+}
+
+// BottlerocketKernelSettings holds the kernel settings for bottlerocket nodes
+type BottlerocketKernelSettings struct {
+	// SysctlSettings defines the kernel sysctl settings to set for bottlerocket nodes.
+	SysctlSettings map[string]string `json:"sysctlSettings,omitempty"`
+}
+
+// BottlerocketBootSettings holds the boot-related settings for bottlerocket nodes.
+type BottlerocketBootSettings struct {
+	BootKernelParameters map[string][]string `json:"bootKernelParameters,omitempty"`
+}
+
+// Pause defines the pause image repo and tag that should be run on the bootstrapped nodes.
+// This setting is ONLY for bottlerocket nodes, as this needs to be set pre-boot time along with user-data
+type Pause struct {
+	// ImageMeta allows to customize the image used for the Pause component
+	ImageMeta `json:",inline"`
+}
+
+// BottlerocketBootstrap holds the settings of kubeadm bootstrap container for bottlerocket nodes
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketBootstrap struct {
+	// ImageMeta allows to customize the image used for the BottlerocketBootstrap component
+	ImageMeta `json:",inline"`
+}
+
+// BottlerocketAdmin holds the settings of admin container for bottlerocket nodes
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketAdmin struct {
+	// ImageMeta allows to customize the image used for the BottlerocketAdmin component
+	ImageMeta `json:",inline"`
+}
+
+// BottlerocketControl holds the settings of control container for bottlerocket nodes
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketControl struct {
+	// ImageMeta allows to customize the image used for the BottlerocketControl component
+	ImageMeta `json:",inline"`
+}
+
+// ProxyConfiguration holds the settings for proxying bottlerocket services
+type ProxyConfiguration struct {
+	// HTTPS proxy
+	HTTPSProxy string `json:"httpsProxy,omitempty"`
+
+	// No proxy, list of ips that should not use proxy
+	NoProxy []string `json:"noProxy,omitempty"`
+}
+
+// RegistryMirrorConfiguration holds the settings for image registry mirror
+type RegistryMirrorConfiguration struct {
+	// Endpoint defines the registry mirror endpoint to use for pulling images
+	Endpoint string `json:"endpoint,omitempty"`
+
+	// CACert defines the CA cert for the registry mirror
+	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
+}
+
 // ControlPlaneComponent holds settings common to control plane component of the cluster.
 type ControlPlaneComponent struct {
 	// ExtraArgs is an extra set of flags to pass to the control plane component.
@@ -388,6 +532,36 @@ type ExternalEtcd struct {
 type JoinConfiguration struct {
 	metav1.TypeMeta `json:",inline"`
 
+	// Pause holds the image source for pause container
+	// This is only for bottlerocket
+	// +optional
+	Pause Pause `json:"pause,omitempty"`
+
+	// BottlerocketBootstrap holds the image source for kubeadm bootstrap container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
+
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
+	// BottlerocketControl holds the image source for control container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketControl BottlerocketControl `json:"bottlerocketControl,omitempty"`
+
+	// Proxy holds the https and no proxy information
+	// This is only for bottlerocket
+	// +optional
+	Proxy ProxyConfiguration `json:"proxy,omitempty"`
+
+	// RegistryMirror holds the image registry mirror information
+	// This is only for bottlerocket
+	// +optional
+	RegistryMirror RegistryMirrorConfiguration `json:"registryMirror,omitempty"`
+
 	// DryRun tells if the dry run mode is enabled, don't apply any change if it is and just output what would be done.
 	// +optional
 	DryRun bool `json:"dryRun,omitempty"`
@@ -410,6 +584,25 @@ type JoinConfiguration struct {
 	// +optional
 	ControlPlane *JoinControlPlane `json:"controlPlane,omitempty"`
 
+	// BottlerocketCustomHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketCustomHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
+	// Bottlerocket holds configuration for certain bottlerocket settings.
+	// This is only for bottlerocket.
+	// +optional
+	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
+
 	// SkipPhases is a list of phases to skip during command execution.
 	// The list of phases can be obtained with the "kubeadm join --help" command.
 	// The flag "--skip-phases" takes precedence over this field.
@@ -426,6 +619,53 @@ type JoinConfiguration struct {
 	Timeouts *Timeouts `json:"timeouts,omitempty"`
 }
 
+// BottlerocketHostContainer describes a host image for Bottlerocket
+type BottlerocketHostContainer struct {
+	// Name is the host container name that will be given to the container in BR's `apiserver`
+	// +kubebuilder:validation:Required
+	Name string `json:"name"`
+	// Superpowered indicates if the container will be superpowered
+	// +kubebuilder:validation:Required
+	Superpowered bool `json:"superpowered"`
+	// ImageMeta is the actual location of the container image
+	ImageMeta `json:"source"`
+	// UserData is the userdata that will be attached to the image.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// ImageMeta is the actual image used for Bottlerocket bootstrap.
+	ImageMeta `json:",inline"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// CertBundle holds the cert data.
+type CertBundle struct {
+	// Name is the name of the cert bundle.
+	Name string `json:"name"`
+
+	// Data is the actual cert.
+	Data string `json:"data"`
+}
+
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
 type JoinControlPlane struct {
 	// LocalAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta4/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta4/zz_generated.conversion.go
index 8cbd5f4c0..6fb0b71e6 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta4/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta4/zz_generated.conversion.go
@@ -83,6 +83,106 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketAdmin)(nil), (*v1beta1.BottlerocketAdmin)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(a.(*BottlerocketAdmin), b.(*v1beta1.BottlerocketAdmin), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketAdmin)(nil), (*BottlerocketAdmin)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta4_BottlerocketAdmin(a.(*v1beta1.BottlerocketAdmin), b.(*BottlerocketAdmin), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketBootSettings)(nil), (*v1beta1.BottlerocketBootSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(a.(*BottlerocketBootSettings), b.(*v1beta1.BottlerocketBootSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketBootSettings)(nil), (*BottlerocketBootSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta4_BottlerocketBootSettings(a.(*v1beta1.BottlerocketBootSettings), b.(*BottlerocketBootSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketBootstrap)(nil), (*v1beta1.BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(a.(*BottlerocketBootstrap), b.(*v1beta1.BottlerocketBootstrap), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketBootstrap)(nil), (*BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta4_BottlerocketBootstrap(a.(*v1beta1.BottlerocketBootstrap), b.(*BottlerocketBootstrap), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketBootstrapContainer)(nil), (*v1beta1.BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(a.(*BottlerocketBootstrapContainer), b.(*v1beta1.BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketBootstrapContainer)(nil), (*BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta4_BottlerocketBootstrapContainer(a.(*v1beta1.BottlerocketBootstrapContainer), b.(*BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketControl)(nil), (*v1beta1.BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketControl_To_v1beta1_BottlerocketControl(a.(*BottlerocketControl), b.(*v1beta1.BottlerocketControl), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketControl)(nil), (*BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketControl_To_upstreamv1beta4_BottlerocketControl(a.(*v1beta1.BottlerocketControl), b.(*BottlerocketControl), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketHostContainer)(nil), (*v1beta1.BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(a.(*BottlerocketHostContainer), b.(*v1beta1.BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketHostContainer)(nil), (*BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta4_BottlerocketHostContainer(a.(*v1beta1.BottlerocketHostContainer), b.(*BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketKernelSettings)(nil), (*v1beta1.BottlerocketKernelSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(a.(*BottlerocketKernelSettings), b.(*v1beta1.BottlerocketKernelSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketKernelSettings)(nil), (*BottlerocketKernelSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta4_BottlerocketKernelSettings(a.(*v1beta1.BottlerocketKernelSettings), b.(*BottlerocketKernelSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketKubernetesSettings)(nil), (*v1beta1.BottlerocketKubernetesSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(a.(*BottlerocketKubernetesSettings), b.(*v1beta1.BottlerocketKubernetesSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketKubernetesSettings)(nil), (*BottlerocketKubernetesSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta4_BottlerocketKubernetesSettings(a.(*v1beta1.BottlerocketKubernetesSettings), b.(*BottlerocketKubernetesSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketSettings)(nil), (*v1beta1.BottlerocketSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_BottlerocketSettings_To_v1beta1_BottlerocketSettings(a.(*BottlerocketSettings), b.(*v1beta1.BottlerocketSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketSettings)(nil), (*BottlerocketSettings)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta4_BottlerocketSettings(a.(*v1beta1.BottlerocketSettings), b.(*BottlerocketSettings), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*CertBundle)(nil), (*v1beta1.CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_CertBundle_To_v1beta1_CertBundle(a.(*CertBundle), b.(*v1beta1.CertBundle), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.CertBundle)(nil), (*CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_CertBundle_To_upstreamv1beta4_CertBundle(a.(*v1beta1.CertBundle), b.(*CertBundle), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*v1beta1.ClusterConfiguration)(nil), (*ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta1_ClusterConfiguration_To_upstreamv1beta4_ClusterConfiguration(a.(*v1beta1.ClusterConfiguration), b.(*ClusterConfiguration), scope)
 	}); err != nil {
@@ -163,6 +263,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*Mirror)(nil), (*v1beta1.Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_Mirror_To_v1beta1_Mirror(a.(*Mirror), b.(*v1beta1.Mirror), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.Mirror)(nil), (*Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_Mirror_To_upstreamv1beta4_Mirror(a.(*v1beta1.Mirror), b.(*Mirror), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*Networking)(nil), (*v1beta1.Networking)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta4_Networking_To_v1beta1_Networking(a.(*Networking), b.(*v1beta1.Networking), scope)
 	}); err != nil {
@@ -183,6 +293,36 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*Pause)(nil), (*v1beta1.Pause)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_Pause_To_v1beta1_Pause(a.(*Pause), b.(*v1beta1.Pause), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.Pause)(nil), (*Pause)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_Pause_To_upstreamv1beta4_Pause(a.(*v1beta1.Pause), b.(*Pause), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*ProxyConfiguration)(nil), (*v1beta1.ProxyConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_ProxyConfiguration_To_v1beta1_ProxyConfiguration(a.(*ProxyConfiguration), b.(*v1beta1.ProxyConfiguration), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.ProxyConfiguration)(nil), (*ProxyConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_ProxyConfiguration_To_upstreamv1beta4_ProxyConfiguration(a.(*v1beta1.ProxyConfiguration), b.(*ProxyConfiguration), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*RegistryMirrorConfiguration)(nil), (*v1beta1.RegistryMirrorConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(a.(*RegistryMirrorConfiguration), b.(*v1beta1.RegistryMirrorConfiguration), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.RegistryMirrorConfiguration)(nil), (*RegistryMirrorConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta4_RegistryMirrorConfiguration(a.(*v1beta1.RegistryMirrorConfiguration), b.(*RegistryMirrorConfiguration), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*ClusterConfiguration)(nil), (*v1beta1.ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta4_ClusterConfiguration_To_v1beta1_ClusterConfiguration(a.(*ClusterConfiguration), b.(*v1beta1.ClusterConfiguration), scope)
 	}); err != nil {
@@ -383,7 +523,285 @@ func Convert_v1beta1_BootstrapTokenString_To_upstreamv1beta4_BootstrapTokenStrin
 	return autoConvert_v1beta1_BootstrapTokenString_To_upstreamv1beta4_BootstrapTokenString(in, out, s)
 }
 
+func autoConvert_upstreamv1beta4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in *BottlerocketAdmin, out *v1beta1.BottlerocketAdmin, s conversion.Scope) error {
+	if err := Convert_upstreamv1beta4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in *BottlerocketAdmin, out *v1beta1.BottlerocketAdmin, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketAdmin_To_upstreamv1beta4_BottlerocketAdmin(in *v1beta1.BottlerocketAdmin, out *BottlerocketAdmin, s conversion.Scope) error {
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta4_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta4_BottlerocketAdmin is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta4_BottlerocketAdmin(in *v1beta1.BottlerocketAdmin, out *BottlerocketAdmin, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketAdmin_To_upstreamv1beta4_BottlerocketAdmin(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in *BottlerocketBootSettings, out *v1beta1.BottlerocketBootSettings, s conversion.Scope) error {
+	out.BootKernelParameters = *(*map[string][]string)(unsafe.Pointer(&in.BootKernelParameters))
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in *BottlerocketBootSettings, out *v1beta1.BottlerocketBootSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketBootSettings_To_v1beta1_BottlerocketBootSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta4_BottlerocketBootSettings(in *v1beta1.BottlerocketBootSettings, out *BottlerocketBootSettings, s conversion.Scope) error {
+	out.BootKernelParameters = *(*map[string][]string)(unsafe.Pointer(&in.BootKernelParameters))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta4_BottlerocketBootSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta4_BottlerocketBootSettings(in *v1beta1.BottlerocketBootSettings, out *BottlerocketBootSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketBootSettings_To_upstreamv1beta4_BottlerocketBootSettings(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(in *BottlerocketBootstrap, out *v1beta1.BottlerocketBootstrap, s conversion.Scope) error {
+	if err := Convert_upstreamv1beta4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(in *BottlerocketBootstrap, out *v1beta1.BottlerocketBootstrap, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta4_BottlerocketBootstrap(in *v1beta1.BottlerocketBootstrap, out *BottlerocketBootstrap, s conversion.Scope) error {
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta4_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta4_BottlerocketBootstrap is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta4_BottlerocketBootstrap(in *v1beta1.BottlerocketBootstrap, out *BottlerocketBootstrap, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta4_BottlerocketBootstrap(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta1.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	if err := Convert_upstreamv1beta4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta1.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta4_BottlerocketBootstrapContainer(in *v1beta1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta4_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta4_BottlerocketBootstrapContainer is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta4_BottlerocketBootstrapContainer(in *v1beta1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketBootstrapContainer_To_upstreamv1beta4_BottlerocketBootstrapContainer(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_BottlerocketControl_To_v1beta1_BottlerocketControl(in *BottlerocketControl, out *v1beta1.BottlerocketControl, s conversion.Scope) error {
+	if err := Convert_upstreamv1beta4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketControl_To_v1beta1_BottlerocketControl is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketControl_To_v1beta1_BottlerocketControl(in *BottlerocketControl, out *v1beta1.BottlerocketControl, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketControl_To_v1beta1_BottlerocketControl(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketControl_To_upstreamv1beta4_BottlerocketControl(in *v1beta1.BottlerocketControl, out *BottlerocketControl, s conversion.Scope) error {
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta4_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketControl_To_upstreamv1beta4_BottlerocketControl is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketControl_To_upstreamv1beta4_BottlerocketControl(in *v1beta1.BottlerocketControl, out *BottlerocketControl, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketControl_To_upstreamv1beta4_BottlerocketControl(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in *BottlerocketHostContainer, out *v1beta1.BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	if err := Convert_upstreamv1beta4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in *BottlerocketHostContainer, out *v1beta1.BottlerocketHostContainer, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta4_BottlerocketHostContainer(in *v1beta1.BottlerocketHostContainer, out *BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta4_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta4_BottlerocketHostContainer is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta4_BottlerocketHostContainer(in *v1beta1.BottlerocketHostContainer, out *BottlerocketHostContainer, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketHostContainer_To_upstreamv1beta4_BottlerocketHostContainer(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in *BottlerocketKernelSettings, out *v1beta1.BottlerocketKernelSettings, s conversion.Scope) error {
+	out.SysctlSettings = *(*map[string]string)(unsafe.Pointer(&in.SysctlSettings))
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in *BottlerocketKernelSettings, out *v1beta1.BottlerocketKernelSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketKernelSettings_To_v1beta1_BottlerocketKernelSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta4_BottlerocketKernelSettings(in *v1beta1.BottlerocketKernelSettings, out *BottlerocketKernelSettings, s conversion.Scope) error {
+	out.SysctlSettings = *(*map[string]string)(unsafe.Pointer(&in.SysctlSettings))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta4_BottlerocketKernelSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta4_BottlerocketKernelSettings(in *v1beta1.BottlerocketKernelSettings, out *BottlerocketKernelSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketKernelSettings_To_upstreamv1beta4_BottlerocketKernelSettings(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in *BottlerocketKubernetesSettings, out *v1beta1.BottlerocketKubernetesSettings, s conversion.Scope) error {
+	out.MaxPods = in.MaxPods
+	out.AllowedUnsafeSysctls = *(*[]string)(unsafe.Pointer(&in.AllowedUnsafeSysctls))
+	out.ClusterDNSIPs = *(*[]string)(unsafe.Pointer(&in.ClusterDNSIPs))
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in *BottlerocketKubernetesSettings, out *v1beta1.BottlerocketKubernetesSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(in, out, s)
+}
+
+// Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta4_BottlerocketKubernetesSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta4_BottlerocketKubernetesSettings(in *v1beta1.BottlerocketKubernetesSettings, out *BottlerocketKubernetesSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta4_BottlerocketKubernetesSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta4_BottlerocketKubernetesSettings(in *v1beta1.BottlerocketKubernetesSettings, out *BottlerocketKubernetesSettings, s conversion.Scope) error {
+	out.AllowedUnsafeSysctls = *(*[]string)(unsafe.Pointer(&in.AllowedUnsafeSysctls))
+	out.ClusterDNSIPs = *(*[]string)(unsafe.Pointer(&in.ClusterDNSIPs))
+	out.MaxPods = in.MaxPods
+	return nil
+}
+
+func autoConvert_upstreamv1beta4_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in *BottlerocketSettings, out *v1beta1.BottlerocketSettings, s conversion.Scope) error {
+	if in.Kubernetes != nil {
+		in, out := &in.Kubernetes, &out.Kubernetes
+		*out = new(v1beta1.BottlerocketKubernetesSettings)
+		if err := Convert_upstreamv1beta4_BottlerocketKubernetesSettings_To_v1beta1_BottlerocketKubernetesSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Kubernetes = nil
+	}
+	out.Kernel = (*v1beta1.BottlerocketKernelSettings)(unsafe.Pointer(in.Kernel))
+	out.Boot = (*v1beta1.BottlerocketBootSettings)(unsafe.Pointer(in.Boot))
+	return nil
+}
+
+// Convert_upstreamv1beta4_BottlerocketSettings_To_v1beta1_BottlerocketSettings is an autogenerated conversion function.
+func Convert_upstreamv1beta4_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in *BottlerocketSettings, out *v1beta1.BottlerocketSettings, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_BottlerocketSettings_To_v1beta1_BottlerocketSettings(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketSettings_To_upstreamv1beta4_BottlerocketSettings(in *v1beta1.BottlerocketSettings, out *BottlerocketSettings, s conversion.Scope) error {
+	if in.Kubernetes != nil {
+		in, out := &in.Kubernetes, &out.Kubernetes
+		*out = new(BottlerocketKubernetesSettings)
+		if err := Convert_v1beta1_BottlerocketKubernetesSettings_To_upstreamv1beta4_BottlerocketKubernetesSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Kubernetes = nil
+	}
+	out.Kernel = (*BottlerocketKernelSettings)(unsafe.Pointer(in.Kernel))
+	out.Boot = (*BottlerocketBootSettings)(unsafe.Pointer(in.Boot))
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta4_BottlerocketSettings is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta4_BottlerocketSettings(in *v1beta1.BottlerocketSettings, out *BottlerocketSettings, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketSettings_To_upstreamv1beta4_BottlerocketSettings(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_upstreamv1beta4_CertBundle_To_v1beta1_CertBundle is an autogenerated conversion function.
+func Convert_upstreamv1beta4_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_CertBundle_To_v1beta1_CertBundle(in, out, s)
+}
+
+func autoConvert_v1beta1_CertBundle_To_upstreamv1beta4_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_v1beta1_CertBundle_To_upstreamv1beta4_CertBundle is an autogenerated conversion function.
+func Convert_v1beta1_CertBundle_To_upstreamv1beta4_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	return autoConvert_v1beta1_CertBundle_To_upstreamv1beta4_CertBundle(in, out, s)
+}
+
 func autoConvert_upstreamv1beta4_ClusterConfiguration_To_v1beta1_ClusterConfiguration(in *ClusterConfiguration, out *v1beta1.ClusterConfiguration, s conversion.Scope) error {
+	if err := Convert_upstreamv1beta4_Pause_To_v1beta1_Pause(&in.Pause, &out.Pause, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_BottlerocketControl_To_v1beta1_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_ProxyConfiguration_To_v1beta1_ProxyConfiguration(&in.Proxy, &out.Proxy, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
+		return err
+	}
 	if err := Convert_upstreamv1beta4_Etcd_To_v1beta1_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
 		return err
 	}
@@ -404,11 +822,22 @@ func autoConvert_upstreamv1beta4_ClusterConfiguration_To_v1beta1_ClusterConfigur
 	if err := Convert_upstreamv1beta4_DNS_To_v1beta1_DNS(&in.DNS, &out.DNS, s); err != nil {
 		return err
 	}
-	// WARNING: in.Proxy requires manual conversion: does not exist in peer-type
 	out.CertificatesDir = in.CertificatesDir
 	out.ImageRepository = in.ImageRepository
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
+	out.BottlerocketHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(v1beta1.BottlerocketSettings)
+		if err := Convert_upstreamv1beta4_BottlerocketSettings_To_v1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	// WARNING: in.EncryptionAlgorithm requires manual conversion: does not exist in peer-type
 	// WARNING: in.CertificateValidityPeriod requires manual conversion: does not exist in peer-type
 	// WARNING: in.CACertificateValidityPeriod requires manual conversion: does not exist in peer-type
@@ -416,11 +845,24 @@ func autoConvert_upstreamv1beta4_ClusterConfiguration_To_v1beta1_ClusterConfigur
 }
 
 func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta4_ClusterConfiguration(in *v1beta1.ClusterConfiguration, out *ClusterConfiguration, s conversion.Scope) error {
-	// WARNING: in.Pause requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketBootstrap requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketControl requires manual conversion: does not exist in peer-type
-	// WARNING: in.RegistryMirror requires manual conversion: does not exist in peer-type
+	if err := Convert_v1beta1_Pause_To_upstreamv1beta4_Pause(&in.Pause, &out.Pause, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta4_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta4_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta4_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_ProxyConfiguration_To_upstreamv1beta4_ProxyConfiguration(&in.Proxy, &out.Proxy, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta4_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
+		return err
+	}
 	if err := Convert_v1beta1_Etcd_To_upstreamv1beta4_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
 		return err
 	}
@@ -445,10 +887,18 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta4_ClusterConfigur
 	out.ImageRepository = in.ImageRepository
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
-	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
-	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
+	out.BottlerocketHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(BottlerocketSettings)
+		if err := Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta4_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -712,6 +1162,24 @@ func Convert_v1beta1_InitConfiguration_To_upstreamv1beta4_InitConfiguration(in *
 }
 
 func autoConvert_upstreamv1beta4_JoinConfiguration_To_v1beta1_JoinConfiguration(in *JoinConfiguration, out *v1beta1.JoinConfiguration, s conversion.Scope) error {
+	if err := Convert_upstreamv1beta4_Pause_To_v1beta1_Pause(&in.Pause, &out.Pause, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_BottlerocketControl_To_v1beta1_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_ProxyConfiguration_To_v1beta1_ProxyConfiguration(&in.Proxy, &out.Proxy, s); err != nil {
+		return err
+	}
+	if err := Convert_upstreamv1beta4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
+		return err
+	}
 	// WARNING: in.DryRun requires manual conversion: does not exist in peer-type
 	if err := Convert_upstreamv1beta4_NodeRegistrationOptions_To_v1beta1_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
 		return err
@@ -729,6 +1197,18 @@ func autoConvert_upstreamv1beta4_JoinConfiguration_To_v1beta1_JoinConfiguration(
 	} else {
 		out.ControlPlane = nil
 	}
+	out.BottlerocketCustomHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(v1beta1.BottlerocketSettings)
+		if err := Convert_upstreamv1beta4_BottlerocketSettings_To_v1beta1_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	out.SkipPhases = *(*[]string)(unsafe.Pointer(&in.SkipPhases))
 	out.Patches = (*v1beta1.Patches)(unsafe.Pointer(in.Patches))
 	// WARNING: in.Timeouts requires manual conversion: does not exist in peer-type
@@ -736,12 +1216,24 @@ func autoConvert_upstreamv1beta4_JoinConfiguration_To_v1beta1_JoinConfiguration(
 }
 
 func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta4_JoinConfiguration(in *v1beta1.JoinConfiguration, out *JoinConfiguration, s conversion.Scope) error {
-	// WARNING: in.Pause requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketBootstrap requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketControl requires manual conversion: does not exist in peer-type
-	// WARNING: in.Proxy requires manual conversion: does not exist in peer-type
-	// WARNING: in.RegistryMirror requires manual conversion: does not exist in peer-type
+	if err := Convert_v1beta1_Pause_To_upstreamv1beta4_Pause(&in.Pause, &out.Pause, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta4_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_BottlerocketAdmin_To_upstreamv1beta4_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta4_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_ProxyConfiguration_To_upstreamv1beta4_ProxyConfiguration(&in.Proxy, &out.Proxy, s); err != nil {
+		return err
+	}
+	if err := Convert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta4_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
+		return err
+	}
 	if err := Convert_v1beta1_NodeRegistrationOptions_To_upstreamv1beta4_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
 		return err
 	}
@@ -760,10 +1252,18 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta4_JoinConfiguration(
 	}
 	out.SkipPhases = *(*[]string)(unsafe.Pointer(&in.SkipPhases))
 	out.Patches = (*Patches)(unsafe.Pointer(in.Patches))
-	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
-	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
-	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
+	out.BottlerocketCustomHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
+	if in.Bottlerocket != nil {
+		in, out := &in.Bottlerocket, &out.Bottlerocket
+		*out = new(BottlerocketSettings)
+		if err := Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta4_BottlerocketSettings(*in, *out, s); err != nil {
+			return err
+		}
+	} else {
+		out.Bottlerocket = nil
+	}
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -811,6 +1311,28 @@ func autoConvert_v1beta1_LocalEtcd_To_upstreamv1beta4_LocalEtcd(in *v1beta1.Loca
 	return nil
 }
 
+func autoConvert_upstreamv1beta4_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_upstreamv1beta4_Mirror_To_v1beta1_Mirror is an autogenerated conversion function.
+func Convert_upstreamv1beta4_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_Mirror_To_v1beta1_Mirror(in, out, s)
+}
+
+func autoConvert_v1beta1_Mirror_To_upstreamv1beta4_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1beta1_Mirror_To_upstreamv1beta4_Mirror is an autogenerated conversion function.
+func Convert_v1beta1_Mirror_To_upstreamv1beta4_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	return autoConvert_v1beta1_Mirror_To_upstreamv1beta4_Mirror(in, out, s)
+}
+
 func autoConvert_upstreamv1beta4_Networking_To_v1beta1_Networking(in *Networking, out *v1beta1.Networking, s conversion.Scope) error {
 	out.ServiceSubnet = in.ServiceSubnet
 	out.PodSubnet = in.PodSubnet
@@ -876,3 +1398,73 @@ func autoConvert_v1beta1_Patches_To_upstreamv1beta4_Patches(in *v1beta1.Patches,
 func Convert_v1beta1_Patches_To_upstreamv1beta4_Patches(in *v1beta1.Patches, out *Patches, s conversion.Scope) error {
 	return autoConvert_v1beta1_Patches_To_upstreamv1beta4_Patches(in, out, s)
 }
+
+func autoConvert_upstreamv1beta4_Pause_To_v1beta1_Pause(in *Pause, out *v1beta1.Pause, s conversion.Scope) error {
+	if err := Convert_upstreamv1beta4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_upstreamv1beta4_Pause_To_v1beta1_Pause is an autogenerated conversion function.
+func Convert_upstreamv1beta4_Pause_To_v1beta1_Pause(in *Pause, out *v1beta1.Pause, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_Pause_To_v1beta1_Pause(in, out, s)
+}
+
+func autoConvert_v1beta1_Pause_To_upstreamv1beta4_Pause(in *v1beta1.Pause, out *Pause, s conversion.Scope) error {
+	if err := Convert_v1beta1_ImageMeta_To_upstreamv1beta4_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_v1beta1_Pause_To_upstreamv1beta4_Pause is an autogenerated conversion function.
+func Convert_v1beta1_Pause_To_upstreamv1beta4_Pause(in *v1beta1.Pause, out *Pause, s conversion.Scope) error {
+	return autoConvert_v1beta1_Pause_To_upstreamv1beta4_Pause(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_ProxyConfiguration_To_v1beta1_ProxyConfiguration(in *ProxyConfiguration, out *v1beta1.ProxyConfiguration, s conversion.Scope) error {
+	out.HTTPSProxy = in.HTTPSProxy
+	out.NoProxy = *(*[]string)(unsafe.Pointer(&in.NoProxy))
+	return nil
+}
+
+// Convert_upstreamv1beta4_ProxyConfiguration_To_v1beta1_ProxyConfiguration is an autogenerated conversion function.
+func Convert_upstreamv1beta4_ProxyConfiguration_To_v1beta1_ProxyConfiguration(in *ProxyConfiguration, out *v1beta1.ProxyConfiguration, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_ProxyConfiguration_To_v1beta1_ProxyConfiguration(in, out, s)
+}
+
+func autoConvert_v1beta1_ProxyConfiguration_To_upstreamv1beta4_ProxyConfiguration(in *v1beta1.ProxyConfiguration, out *ProxyConfiguration, s conversion.Scope) error {
+	out.HTTPSProxy = in.HTTPSProxy
+	out.NoProxy = *(*[]string)(unsafe.Pointer(&in.NoProxy))
+	return nil
+}
+
+// Convert_v1beta1_ProxyConfiguration_To_upstreamv1beta4_ProxyConfiguration is an autogenerated conversion function.
+func Convert_v1beta1_ProxyConfiguration_To_upstreamv1beta4_ProxyConfiguration(in *v1beta1.ProxyConfiguration, out *ProxyConfiguration, s conversion.Scope) error {
+	return autoConvert_v1beta1_ProxyConfiguration_To_upstreamv1beta4_ProxyConfiguration(in, out, s)
+}
+
+func autoConvert_upstreamv1beta4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(in *RegistryMirrorConfiguration, out *v1beta1.RegistryMirrorConfiguration, s conversion.Scope) error {
+	out.Endpoint = in.Endpoint
+	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
+	return nil
+}
+
+// Convert_upstreamv1beta4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration is an autogenerated conversion function.
+func Convert_upstreamv1beta4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(in *RegistryMirrorConfiguration, out *v1beta1.RegistryMirrorConfiguration, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(in, out, s)
+}
+
+func autoConvert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta4_RegistryMirrorConfiguration(in *v1beta1.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
+	out.Endpoint = in.Endpoint
+	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
+	return nil
+}
+
+// Convert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta4_RegistryMirrorConfiguration is an autogenerated conversion function.
+func Convert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta4_RegistryMirrorConfiguration(in *v1beta1.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
+	return autoConvert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta4_RegistryMirrorConfiguration(in, out, s)
+}
-- 
2.42.0

